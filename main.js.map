{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dataservice.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- <button (click)=\\\"signIn('google')\\\">google</button> -->\\n<!-- <button (click)=\\\"signIn('linkedin')\\\">linkedIn</button> -->\\n<!-- <button (click)=\\\"signIn('facebook')\\\">facebook</button> -->\\n<!-- <button (click)=\\\"logout()\\\">logout</button> -->\\n\\n<!-- <script type=\\\"text/javascript\\\" src=\\\"http://connect.facebook.net/en_US/all.js\\\"></script>\\n<script type=\\\"text/javascript\\\">\\n  FB.init({\\n    appId  : true,\\n    status : false, // check login status\\n    cookie : false, // enable cookies to allow the server to access the session\\n    xfbml  : true  // parse XFBML\\n  });\\n</script> -->\\n\\n<!-- <button (click)=\\\"socialSignIn('google')\\\" class=\\\"btn btn-social btn-google\\\">google</button>\\n\\n<button (click)=\\\"socialSignIn('facebook')\\\" class=\\\"btn btn-social btn-facebook\\\">FB</button> -->\\n\\n<button (click)=\\\"socialSignIn('facebook')\\\" class=\\\"btn  btn-social btn-facebook\\\">\\n  <span class=\\\"fa fa-facebook\\\"></span> Sign in with Facebook</button>\\n  <button (click)=\\\"socialSignIn('google')\\\" class=\\\"btn  btn-social btn-google\\\">\\n  <span class=\\\"fa fa-google\\\"></span>  Sign in with Google</button> \\n\\n\\n\\n\\n\"","import { Component } from '@angular/core';\nimport { DataserviceService } from './dataservice.service'\n\nimport {\n  AuthService,\n  FacebookLoginProvider,\n  GoogleLoginProvider\n} from 'angular5-social-login';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'social';\n  sub: any;\n  constructor(private socialAuthService: AuthService,\n    private cms: DataserviceService,\n    private authServices: AuthService) { }\n\n \n\n  signIn(provider) {\n    // this.sub = this._auth.login(provider).subscribe(\n    //   (data) => {\n    //     console.log(\"provider:\",data);\n    //   }\n    // )\n  }\n\n  logout() {\n    this.socialAuthService.signOut();\n    // this._auth.logout().subscribe(\n    //   (data)=>{//return a boolean value.}\n    //   console.log(\"logout:\",data)\n    //   this.sub.unsubscribe();\n    // }\n\n    // )\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  socialSignIn(socialPlatform: string) {\n    let socialPlatformProvider;\n    if (socialPlatform == \"facebook\") {\n      socialPlatformProvider = FacebookLoginProvider.PROVIDER_ID;\n    } else if (socialPlatform == \"google\") {\n      socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\n    }\n    this.socialAuthService.signIn(socialPlatformProvider).then(\n      (userData) => {\n        console.log('Google:',userData)\n        // this.cms.postMethod(\"url\", userData)\n        // .subscribe(results => {\n        //   console.log(results);\n        // })\n        //console.log(socialPlatform+\" sign in data : \" , userData);\n        //console.log( JSON.stringify(userData));       \n        // Now sign-in with userData      \n        if (userData.provider == 'facebook') {\n          console.log(userData.id + '---' + userData.email + '---' + userData.image + '--' + userData.name + '--' + userData.provider);\n        } else {\n          console.log('Google')\n        }\n      },\n      err=>{\n        console.log(\"error:\",err)\n      }\n    );\n  }\n  \n  \n  login() {\n  \n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\n\nimport { Angular2SocialLoginModule } from \"angular2-social-login\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {\n  SocialLoginModule,\n  AuthServiceConfig,\n  GoogleLoginProvider,\n  FacebookLoginProvider,\n} from \"angular5-social-login\";\n\nlet FB \nlet providers = {\n  \"google\": {\n    \"clientId\": \"849895158955-gflqramcraaoh8llmefq7v38s7vne5iu.apps.googleusercontent.com\"\n\n  }, \n  \"facebook\": {\n    \"clientId\": \"297027457596576\",\n    \"appId\"   :\"297027457596576\",\n    \"apiVersion\": \"v3.2\"\n  }\n};\n\n\n\nexport function getAuthServiceConfigs() {\n  let config = new AuthServiceConfig(\n      [\n        {\n          id: FacebookLoginProvider.PROVIDER_ID,\n          provider: new FacebookLoginProvider(\"Your-Facebook-app-id\")\n        },\n        {\n          id: GoogleLoginProvider.PROVIDER_ID,\n          provider: new GoogleLoginProvider(\"849895158955-gflqramcraaoh8llmefq7v38s7vne5iu.apps.googleusercontent.com\")\n        },\n      ]\n  )\n  return config;\n}\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpModule,\n    Angular2SocialLoginModule,\n    SocialLoginModule\n  ],\n  providers: [\n    {\n      provide: AuthServiceConfig,\n      useFactory: getAuthServiceConfigs\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\nAngular2SocialLoginModule.loadProvidersScripts(providers);\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/Rx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataserviceService {\n\n  constructor( private http: Http) { }\n\n  getMethod(url){\n    return this.http.get(url)\n    .map((res)=>{\n      let data = res.json();\n      return data;\n    })\n  }\n\n  postMethod(url,data){\n    return this.http.post(url,data)\n      .map((res)=>{\n        let data = res.json();\n        return data;\n      })\n   \n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}